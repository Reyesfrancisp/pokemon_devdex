  type User {
    _id: ID!
    email: String!
    username: String!
    favorites: [Favorite]
  }

  type Team {
    _id: ID!
    name: String
  }

  type Query {
    authenticated: User
    favorites: [Favorite] # Query to get all favorites
  }

  type Mutation {
    register(email: String!, password: String!): User
    login(email: String!, password: String!): User
    logout: String
    
    createTeam: Team
    deleteTeam(teamId: ID!): Team
    editTeamName(teamId: ID!, newTeamName: String!): Team

    createMove(teamID: ID!, pokemonID: ID!, moveData: MoveInput!): Team
    deleteMove(teamID: ID!, pokemonID: ID!, moveID: ID!): Team
  }

  input MoveInput {
    name: String!
    description: String!
    type: String!
  }

  type Favorite {
  _id: ID!
}

type Mutation {
  addFavorite(pokemonData: YourInputType): User
  deleteFavorite(favoriteId: ID!): User
}
